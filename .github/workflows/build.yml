name: Build V8

on:
  push:
    branches: [ master ]
    paths:
    - 'V8_VERSION'
    - 'builders/**'
    - '.github/workflows/build.yml'

jobs:

  version_reader:
    name: Get version number
    runs-on: ubuntu-latest
    outputs:
      v8_version: ${{ steps.got_version.outputs.version }}
    steps:
    - uses: actions/checkout@v2
    - id: got_version
      run: |
        cd $GITHUB_WORKSPACE
        echo "::set-output name=version::$(<./V8_VERSION)"
  
  build_android_arm_v8:
    name: Android (arm64-v8a)
    runs-on: ubuntu-18.04
    needs: version_reader
    steps:
    - uses: actions/checkout@v2
    - name: Run build script
      run: |
        cd $GITHUB_WORKSPACE
        sh ./builders/v8-android-arm-v8.sh ${{ needs.version_reader.outputs.v8_version }}
    - uses: actions/upload-artifact@v2
      with:
        name: android_arm64-v8a
        path: |
          ~/v8/v8/out.gn/arm64.release/*.so
          ~/v8/v8/out.gn/arm64.release/*.dat
          ~/v8/v8/out.gn/arm64.release/clang_*/bytecode_builtins_list_generator
          ~/v8/v8/out.gn/arm64.release/clang_*/gen-regexp-special-case
          ~/v8/v8/out.gn/arm64.release/clang_*/mksnapshot
          ~/v8/v8/out.gn/arm64.release/clang_*/torque

  # build_android_arm_v7:
  #   name: Android (armeabi-v7a)
  #   runs-on: ubuntu-18.04
  #   needs: version_reader
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Run build script
  #     run: |
  #       cd $GITHUB_WORKSPACE
  #       sh ./builders/v8-android-arm-v7.sh ${{ needs.version_reader.outputs.v8_version }}
  #   - uses: actions/upload-artifact@v2
  #     with:
  #       name: android_armeabi-v7a
  #       path: |
  #         ~/v8/v8/out.gn/arm.release/*.so
  #         ~/v8/v8/out.gn/arm.release/*.dat
  #         ~/v8/v8/out.gn/arm.release/clang_*/bytecode_builtins_list_generator
  #         ~/v8/v8/out.gn/arm.release/clang_*/gen-regexp-special-case
  #         ~/v8/v8/out.gn/arm.release/clang_*/mksnapshot
  #         ~/v8/v8/out.gn/arm.release/clang_*/torque
  #
  # build_android_x86_64:
  #   name: Android (x86-64)
  #   runs-on: ubuntu-18.04
  #   needs: version_reader
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Run build script
  #     run: |
  #       cd $GITHUB_WORKSPACE
  #       sh ./builders/v8-android-x86-64.sh ${{ needs.version_reader.outputs.v8_version }}
  #   - uses: actions/upload-artifact@v2
  #     with:
  #       name: android_x86-64
  #       path: |
  #         ~/v8/v8/out.gn/x64.release/*.so
  #         ~/v8/v8/out.gn/x64.release/*.dat
  #         ~/v8/v8/out.gn/x64.release/clang_*/bytecode_builtins_list_generator
  #         ~/v8/v8/out.gn/x64.release/clang_*/gen-regexp-special-case
  #         ~/v8/v8/out.gn/x64.release/clang_*/mksnapshot
  #         ~/v8/v8/out.gn/x64.release/clang_*/torque
  #
  # build_android_x86:
  #   name: Android (x86)
  #   runs-on: ubuntu-18.04
  #   needs: version_reader
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Run build script
  #     run: |
  #       cd $GITHUB_WORKSPACE
  #       sh ./builders/v8-android-x86.sh ${{ needs.version_reader.outputs.v8_version }}
  #   - uses: actions/upload-artifact@v2
  #     with:
  #       name: android_x86
  #       path: |
  #         ~/v8/v8/out.gn/ia32.release/*.so
  #         ~/v8/v8/out.gn/ia32.release/*.dat
  #         ~/v8/v8/out.gn/ia32.release/clang_*/bytecode_builtins_list_generator
  #         ~/v8/v8/out.gn/ia32.release/clang_*/gen-regexp-special-case
  #         ~/v8/v8/out.gn/ia32.release/clang_*/mksnapshot
  #         ~/v8/v8/out.gn/ia32.release/clang_*/torque

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [
      #build_android_arm_v8, build_android_arm_v7, build_android_x86_64, build_android_x86
      build_android_arm_v8
    ]
    steps:
    - uses: actions/download-artifact@v2
      with:
        path: 'v8'
    - name: Make zip
      run: |
        zip -r v8_engine.zip v8
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.version_reader.outputs.v8_version }}
        release_name: V8 engine, version ${{ needs.version_reader.outputs.v8_version }}
        draft: true
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: v8_engine.zip
        asset_name: v8_engine_${{ needs.version_reader.outputs.v8_version }}.zip
        asset_content_type: application/zip
